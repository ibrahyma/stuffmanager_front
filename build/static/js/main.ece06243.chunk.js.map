{"version":3,"sources":["Templates/Navbar.js","Templates/Footer.js","Views/E404.js","Templates/Loading.js","Views/ProductsList.js","Views/Product.js","Views/LoginForm.js","Views/RegisterForm.js","Views/E403.js","Views/AddProductForm.js","Views/ModifyProductForm.js","Views/DeleteProductForm.js","App.js","reportWebVitals.js","index.js"],"names":["MenuOption","hRef","content","onclick","isSelected","useLocation","pathname","className","href","onClick","Navbar","this","props","admin","logoutHandler","Component","Footer","E404","Helmet","Loading","ProductItem","ID","name","price","imageUrl","firstOfRange","title","alt","src","ProductsList","state","products","loaded","XHR","XMLHttpRequest","open","onreadystatechange","readyState","response","JSON","parse","responseText","setState","status","send","viewTemplate","component","map","product","index","_id","Product","useState","setProduct","useParams","id","setLoaded","loadingStyle","justifyContent","URL","style","description","quantity","LoginForm","login","password","redirect","error","onChangeLogin","event","target","value","onChangePassword","onSubmit","preventDefault","token","userId","setTokenHandle","message","setRequestHeader","stringify","email","submit","length","to","action","method","htmlFor","type","onChange","placeholder","disabled","RegisterForm","success","isValidEmail","match","isValidLogin","isValidPassword","onChangeEmail","borderBottomColor","E403","AddProductForm","fileChecked","linkChecked","isNotEmpty","str","trim","onChangeDescription","onChangeName","val","onChangePrice","isValid","onChangeQuantity","onChangeImageUrl","onSelectRadioLink","onSelectRadioFile","Number","parseFloat","parseInt","inputMode","checked","ModifyProductForm","setDescription","setError","setImageUrl","setFileChecked","setLinkChecked","setName","setPrice","setQuantity","setSuccess","display","defaultValue","DeleteProductForm","setRedirect","sessionIsActive","userIdVerify","sessionStorage","getItem","jwt","require","split","verify","clear","App","connected","logout","tryLogin","newToken","setItem","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ece06243.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\nconst MenuOption = ({ hRef, content, onclick }) =>\n{\n    const currentRoute = useLocation().pathname\n    const isSelected = (currentRoute === hRef)\n\n    return (\n        <Router>\n            <li className={ `menu__option ${ isSelected && \"menu__option--selected\" }` }>\n            {\n                isSelected ? (\n                    <span>{content}</span>\n                ) : (\n                    <a href={ hRef } onClick={ onclick }>{ content }</a>\n                )\n            }\n            </li>\n        </Router>\n    )\n}\n\nMenuOption.propTypes = {\n    hRef: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    onclick: PropTypes.func\n}\n\nclass Navbar extends Component\n{\n    static propTypes = {\n        admin: PropTypes.bool.isRequired,\n        logoutHandler: PropTypes.func.isRequired\n    }\n\n    render()\n    {\n        const { admin, logoutHandler } = this.props\n\n        return (\n            <nav className=\"navbar\">\n                <div className=\"logo\"><a href=\"/\">Stuff Manager</a></div>\n                <ul className=\"menu\">\n                {\n                    admin ? [\n                        <MenuOption key={0} hRef=\"/\" content=\"Liste des produits\"/>,\n                        <MenuOption key={1} hRef=\"/addProduct\" content=\"Ajouter un produit\"/>,\n                        <MenuOption key={2} hRef=\"/logout\" content=\"Déconnexion\" onclick={ logoutHandler }/>\n                    ] : [\n                        <MenuOption key={0} hRef=\"/\" content=\"Liste des produits\"/>,\n                        <MenuOption key={3} hRef=\"/login\" content=\"Connexion\"/>,\n                        <MenuOption key={4} hRef=\"/register\" content=\"Inscription\"/>\n                    ]\n                }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar","const Footer = () =>\n{\n    return (\n        <footer className=\"footer\"><span>Tous droits réservés &copy; 2020</span></footer>\n    )\n}\n\nexport default Footer","import { Helmet } from 'react-helmet'\n\nconst E404 = () =>\n{\n    return [\n        <Helmet key={0}>\n            <title>Non trouvée - STUFF MANAGER</title>\n        </Helmet>,\n        <h1 className=\"title\" key={1}>Erreur 404</h1>,\n        <p className=\"error\" key={2}>Cette page n'existe pas ou a été retirée.</p>\n    ]\n}\n\nexport default E404","const Loading = () =>\n{\n    return (<div className=\"loading\"></div>)\n}\n\nexport default Loading","import { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Loading from '../Templates/Loading'\n\nconst ProductItem = ({ ID, name, price, imageUrl, firstOfRange }) =>\n{\n    return (\n        <div className={ `productItem ${firstOfRange && \"productItem--firstOfRange\"}` }>\n            <a href={ `/product/${ID}`} title={ name }>\n                <img className=\"productItem__img\" alt={ name } src={ imageUrl }/>\n                \n                <div className=\"productItem__caption\">\n                    <p className=\"name\">{ name }</p>\n                    <p className=\"price\">{ price }</p>\n                </div>\n            </a>\n        </div>\n    )\n}\n\nProductItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    ID: PropTypes.string.isRequired,\n    firstOfRange: PropTypes.bool\n}\n\nclass ProductsList extends Component\n{\n    state = {\n        products: null,\n        loaded: false\n    }\n\n    componentDidMount()\n    {\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"GET\", 'http://localhost:3200/api/products')\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                const response = JSON.parse(XHR.responseText)\n                this.setState({ products: XHR.status === 200 ? response.products : null })\n                this.setState({ loaded: true })\n            }\n        }\n\n        XHR.send()\n    }\n\n    render()\n    {\n        const { products, loaded } = this.state\n        const viewTemplate = (component) => [\n            <h1 className=\"title\" key={0}>Liste des produits</h1>,\n            <div className=\"productsList\" key={1}>{ component }</div>\n        ]\n\n        if (!loaded)\n            return viewTemplate(<Loading/>)\n\n        if (!products)\n            return viewTemplate(<p>Aucun produit pour l'instant.</p>)\n\n        return viewTemplate(products.map((product, index) =>\n            <ProductItem\n                ID={ product._id }\n                name={ product.name }\n                price={ product.price }\n                imageUrl={ product.imageUrl }\n                key={ product._id }\n                firstOfRange={ index % 4 === 0 }\n            />))\n    }\n}\n\nexport default ProductsList","import { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport Loading from '../Templates/Loading'\n\nconst Product = ({ admin }) =>\n{\n    const [product, setProduct] = useState(null)\n    const [id] = useState(useParams().id)\n    const [loaded, setLoaded] = useState(false)\n    \n    // Component did mount\n    const loadingStyle = { justifyContent: loaded ? \"initial\" : \"center\" }\n    \n    if (!loaded)\n    {\n        const URL = `http://localhost:3200/api/products/${id}`\n        const XHR = new XMLHttpRequest()\n        XHR.open(\"GET\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                if (XHR.status === 200)\n                {\n                    const response = JSON.parse(XHR.responseText)\n                    setProduct(response.product)\n                }\n\n                setLoaded(true)\n            }\n        }\n\n        XHR.send()\n    }\n\n    // Render\n    const viewTemplate = (title, component) => [\n        <h1 className=\"title\" key={0}>{ title }</h1>,\n        <div className=\"product\" style={ loadingStyle } key={1}>{ component }</div>\n    ]\n\n    if (!loaded)\n        return viewTemplate(\"Encore un peu de patience...\", <Loading/>)\n        \n    if (!product)\n        return viewTemplate(\n            \"Produit inexistant\",\n            <p className=\"error\">Ce produit n'existe pas ou a été retiré.</p>\n        )\n\n    const { _id, name, price, description, quantity, imageUrl } = product;\n\n    return viewTemplate(\n        name,\n        [\n            <Helmet key={2}>\n                <title>{ name } - STUFF MANAGER</title>\n            </Helmet>,\n            <img alt={ name } src={ imageUrl } className=\"product__img\" key={3}/>,\n            <div className=\"product__aside\" key={4}>\n                <p className=\"description\">{ description }</p>\n\n                <div className=\"otherInfos\">\n                    <p>\n                        Prix : <span className=\"price\">{ price }</span>\n                    </p>\n                    <p>\n                        Quantité : <span>{ quantity > 0 ? quantity : \"Aucune.\"}</span>\n                    </p>\n                    {\n                        admin && [\n                            <p key={6}>\n                                <a className=\"link\" href={ `/product/${_id}/modify` } title=\"Modifier\">Modifier</a>\n                            </p>,\n                            <p key={7}>\n                                <a className=\"link\" href={ `/product/${_id}/delete` } title=\"Supprimer\">Supprimer</a>\n                            </p>\n                        ]\n                    }\n                </div>\n            </div>\n        ]\n    )\n}\n\nProduct.propTypes = {\n    admin: PropTypes.bool.isRequired\n}\n\nexport default Product","import { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nclass LoginForm extends Component\n{\n    static propTypes = {\n        setTokenHandle: PropTypes.func.isRequired\n    }\n\n    state = {\n        login: \"\",\n        password: \"\",\n        redirect: null,\n        error: null\n    }\n\n    onChangeLogin = (event) =>\n    {\n        this.setState({ login: event.target.value })\n    }\n\n    onChangePassword = (event) =>\n    {\n        this.setState({ password: event.target.value })\n    }\n\n    onSubmit = (event) =>\n    {\n        event.preventDefault()\n        \n        const { login, password } = this.state\n        const URL = \"http://localhost:3200/api/auth/login\"\n\n        var XHR = new XMLHttpRequest()\n        XHR.open(\"POST\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let response = JSON.parse(XHR.responseText)\n                \n                if (XHR.status === 200)\n                {\n                    let token = response.token\n                    let userId = response.userId\n                    \n                    this.props.setTokenHandle(token, userId)\n                    this.setState({ redirect: \"/\", error: null })\n                }\n                else\n                {\n                    this.setState({ error: response.message })\n                }\n            }\n        }\n\n        XHR.setRequestHeader('Content-Type', 'application/json');\n        XHR.send(JSON.stringify({\n            login: login,\n            email: login,\n            password: password\n        }))\n    }\n\n    render()\n    {\n        const { login, password, redirect, error } = this.state\n        const submit = login.length > 0 && password.length > 0\n\n        if (redirect)\n            return (<Redirect to={ redirect }/>)\n\n        return [\n            <Helmet key={0}>\n                <title>Connexion - STUFF MANAGER</title>\n            </Helmet>,\n            <h1 className=\"title\" key={1}>Connexion</h1>,\n            error && <p className=\"error\" key={2}>{ error }</p>,\n            <form action=\"/\" className=\"loginForm\" method=\"POST\" onSubmit={ this.onSubmit } key={3}>\n                <div className=\"loginForm__field field\">\n                    <label htmlFor=\"Email ou pseudo\">Email ou pseudo</label>\n                    <input className=\"textfield\" type=\"text\" name=\"login\" onChange={ this.onChangeLogin } placeholder=\"jdupont\"/>\n                </div>\n                <div className=\"loginForm__field field\">\n                    <label htmlFor=\"Mot de passe\">Mot de passe</label>\n                    <input className=\"textfield\" type=\"password\" name=\"mdp\" onChange={ this.onChangePassword }/>\n                </div>\n                <div className=\"loginForm__field field\">\n                    <input className={`button ${submit || \"button--disabled\"}`} type=\"submit\" value=\"Se connecter\" disabled={ !submit }/>\n                </div>\n            </form>\n        ]\n    }\n}\n\nexport default LoginForm","import { Component } from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass RegisterForm extends Component\n{\n    state = {\n        error: null,\n        success: null,\n        email: \"\",\n        login: \"\",\n        password: \"\"\n    }\n\n    isValidEmail = () =>\n    {\n        let validEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n        return this.state.email.match(validEmail)\n    }\n\n    isValidLogin = () =>\n    {\n        let validLogin = /^[a-zA-Z0-9]{6,}$/\n        return this.state.login.match(validLogin)\n    }\n\n    isValidPassword = () =>\n    {\n        return this.state.password.length >= 6\n    }\n\n    onChangeEmail = event =>\n    {\n        this.setState({ email: event.target.value })\n        event.target.style.borderBottomColor = this.isValidEmail() ? \"green\" : \"red\"\n    }\n\n    onChangeLogin = event =>\n    {\n        this.setState({ login: event.target.value })\n        event.target.style.borderBottomColor = this.isValidLogin() ? \"green\" : \"red\"\n    }\n\n    onChangePassword = event =>\n    {\n        this.setState({ password: event.target.value })\n        event.target.style.borderBottomColor = this.isValidPassword() ? \"green\" : \"red\"\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n        \n        const { email, login, password } = this.state\n        const XHR = new XMLHttpRequest()\n        const URL = \"http://localhost:3200/api/auth/register\"\n\n        XHR.open(\"POST\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let response = JSON.parse(XHR.responseText)\n\n                if (XHR.status === 201)\n                    this.setState({ error: null, success: response.message })\n                else\n                    this.setState({ error: response.message, success: null })\n            }\n        }\n\n        XHR.setRequestHeader('Content-type', 'application/json')\n        XHR.send(JSON.stringify({\n            email: email,\n            login: login,\n            password: password\n        }))\n    }\n\n    render()\n    {\n        const { error, success } = this.state\n        const submit = this.isValidEmail() && this.isValidLogin() && this.isValidPassword()\n\n        return [\n            <Helmet key={0}>\n                <title>Inscription - STUFF MANAGER</title>\n            </Helmet>,\n            <h1 className=\"title\" key={1}>Inscription</h1>,\n            error && <p className=\"error\" key={2}>{ error }</p>,\n            success && <p className=\"success\" key={3}>{ success }</p>,\n            <form key={4} action=\"/\" className=\"registerForm\" method=\"POST\" onSubmit={ this.onSubmit }>\n                <div className=\"registerForm__field field\">\n                    <label htmlFor=\"Email\">Email</label>\n                    <input\n                        className=\"textfield\"\n                        name=\"email\"\n                        onChange={ this.onChangeEmail }\n                        placeholder=\"jdupont@gmail.com\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"registerForm__field field\">\n                    <label htmlFor=\"Pseudo\">Pseudo</label>\n                    <input\n                        className=\"textfield\"\n                        type=\"text\"\n                        name=\"login\"\n                        onChange={ this.onChangeLogin }\n                        placeholder=\"Minimum 6 caractères, alphanumériques uniquement\"\n                    />\n                </div>\n                <div className=\"registerForm__field field\">\n                    <label htmlFor=\"Mot de passe\">Mot de passe</label>\n                    <input\n                        className=\"textfield\"\n                        type=\"password\"\n                        name=\"mdp\"\n                        onChange={ this.onChangePassword }\n                        placeholder=\"Minimum 6 caractères\"\n                    />\n                </div>\n                <div className=\"registerForm__field field\">\n                    <input\n                        className={`button ${submit || \"button--disabled\"}`}\n                        disabled={ !submit }\n                        type=\"submit\"\n                        value=\"S'inscrire\"\n                    />\n                </div>\n            </form>\n        ]\n    }\n}\n\nexport default RegisterForm","import { Helmet } from 'react-helmet'\n\nconst E403 = () =>\n{\n    return [\n        <Helmet key={0}>\n            <title>Accès interdit - STUFF MANAGER</title>\n        </Helmet>,\n        <h1 className=\"title\" key={1}>Erreur 403</h1>,\n        <p className=\"error\" key={2}>Vous n'avez pas accès à cette page.</p>\n    ]\n}\n\nexport default E403","import { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport E403 from './E403'\n\nclass AddProductForm extends Component\n{\n    static propTypes = {\n        token: PropTypes.string\n    }\n\n    state = {\n        description: \"\",\n        error: null,\n        imageUrl: \"\",\n        fileChecked: false,\n        linkChecked: false,\n        name: \"\",\n        price: \"\",\n        quantity: \"\",\n        success: null,\n    }\n\n    isNotEmpty = str => str.trim() !== \"\"\n\n    onChangeDescription = event =>\n    {\n        this.setState({ description: event.target.value })\n    }\n\n    onChangeName = event =>\n    {\n        let val = event.target.value\n        this.setState({ name: val })\n        event.target.style.borderBottomColor = this.isNotEmpty(val) ? \"green\" : \"red\"\n    }\n\n    onChangePrice = event =>\n    {\n        let val = event.target.value\n        let isValid = str => str.match(/^[0-9]+\\.?([0-9]{1,2})?$/)\n\n        if (isValid(val) || val === \"\") \n            this.setState({ price: val })\n        \n        event.target.style.borderBottomColor = isValid(this.state.price) ? \"green\" : \"red\"\n    }\n\n    onChangeQuantity = event =>\n    {\n        let val = event.target.value\n        let isValid = str => str.match(/^[0-9]+$/)\n\n        if (isValid(val) || val === \"\") \n            this.setState({ quantity: val })\n        \n        event.target.style.borderBottomColor = isValid(this.state.quantity) ? \"green\" : \"red\"\n    }\n\n    onChangeImageUrl = event =>\n    {\n        let val = event.target.value\n        this.setState({ imageUrl: val })\n        event.target.style.borderBottomColor = this.isNotEmpty(val) ? \"green\" : \"red\"\n    }\n\n    onSelectRadioLink = () =>\n    {\n        this.setState({\n            linkChecked: true,\n            fileChecked: false\n        })\n    }\n\n    onSelectRadioFile = () =>\n    {\n        this.setState({\n            linkChecked: false,\n            fileChecked: true\n        })\n    }\n\n    onSubmit = event =>\n    {\n        event.preventDefault();\n\n        const { name, price, description, quantity, imageUrl } = this.state\n        const URL = \"http://localhost:3200/api/products\"\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"POST\", URL)\n        \n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let response = JSON.parse(XHR.responseText)\n\n                if (XHR.status === 201)\n                    this.setState({ error: null, success: \"/\" })\n                else\n                    this.setState({ error: response.message, success: null })\n            }\n        }\n\n        XHR.setRequestHeader('Content-type', 'application/json')\n        XHR.setRequestHeader('Authorization', this.props.token)\n        XHR.send(JSON.stringify({\n            name: name,\n            price: Number.parseFloat(price),\n            description: description,\n            quantity: Number.parseInt(quantity),\n            imageUrl: imageUrl\n        }))\n    }\n\n    render()\n    {\n        const { error, fileChecked, linkChecked, success } = this.state\n        const { name, price, quantity, imageUrl } = this.state\n        const { token } = this.props\n        \n        const submit = this.isNotEmpty(name) && this.isNotEmpty(price)\n            && this.isNotEmpty(quantity) && this.isNotEmpty(imageUrl)\n\n        if (!token)\n            return <E403/>\n\n        if (success)\n            return <Redirect to={ success }/>\n        \n        return [\n            <Helmet key={0}>\n                <title>Ajouter un produit - STUFF MANAGER</title>\n            </Helmet>,\n            <h1 className=\"title\" key={1}>Ajouter un produit</h1>,\n            error && <p className=\"error\" key={2}>{ error }</p>,\n            <form action=\"\" method=\"POST\" onSubmit={ this.onSubmit } key={3}>\n                <div className=\"field\">\n                    <label htmlFor=\"Nom\">Nom du produit</label>\n                    <input\n                        className=\"textfield\"\n                        name=\"name\"\n                        onChange={ this.onChangeName }\n                        placeholder=\"Nom du produit\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"field\">\n                    <label htmlFor=\"Prix\">Prix (€)</label>\n                    <input\n                        className=\"textfield\"\n                        inputMode=\"numeric\"\n                        name=\"price\"\n                        onChange={ this.onChangePrice }\n                        placeholder=\"12.34\"\n                        type=\"text\"\n                        value={ price }\n                    />\n                </div>\n                <div className=\"field\">\n                    <label htmlFor=\"Description\">Description</label>\n                    <textarea\n                        className=\"textfield textfield--area\"\n                        name=\"description\"\n                        onChange={ this.onChangeDescription }\n                        placeholder=\"Ici, la description...\"\n                    >\n                    </textarea>\n                </div>\n                <div className=\"field\">\n                    <label htmlFor=\"Quantité\">Quantité</label>\n                    <input\n                        className=\"textfield\"\n                        inputMode=\"decimal\"\n                        name=\"quantity\"\n                        onChange={ this.onChangeQuantity }\n                        placeholder=\"123\"\n                        type=\"text\"\n                        value={ quantity }\n                    />\n                </div>\n                <div className=\"field\">\n                    <label htmlFor=\"Quantité\">Image</label>\n                    <div className=\"field__radio\">\n                        <input\n                            checked={ linkChecked }\n                            type=\"radio\"\n                            name=\"imageUrlOption\"\n                            value=\"link\"\n                            onChange={ this.onSelectRadioLink }\n                        />\n                        <input\n                            className={ `textfield ${linkChecked || \"textfield--disabled\"}` }\n                            disabled={ !linkChecked }\n                            type=\"text\"\n                            onChange={ this.onChangeImageUrl }\n                            name=\"imageUrl\"\n                            placeholder=\"https://cdn.urldelimage.com/image.png\"\n                        />\n                    </div>\n                    <div className=\"field__radio\">\n                        <input\n                            checked={ fileChecked }\n                            type=\"radio\"\n                            name=\"imageUrlOption\"\n                            value=\"file\"\n                            onChange={ this.onSelectRadioFile }\n                        />\n                        <input\n                            className={ `textfield ${fileChecked || \"textfield--disabled\"}` }\n                            disabled={ !fileChecked }\n                            type=\"file\"\n                            name=\"imageUrl\"\n                            placeholder=\"Chargez votre image ici...\"\n                        />\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <input\n                        className={ `button ${submit || \"button--disabled\"}` }\n                        disabled={ !submit }\n                        type=\"submit\"\n                        value=\"Ajouter le produit\"\n                    />\n                </div>\n            </form>\n        ]\n    }\n}\n\nexport default AddProductForm","import { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { useParams, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport E403 from './E403'\nimport Loading from '../Templates/Loading'\n\nconst ModifyProductForm = ({ token }) =>\n{\n    const [description, setDescription] = useState(\"\")\n    const [error, setError] = useState(null)\n    const [id] = useState(useParams().id)\n    const [imageUrl, setImageUrl] = useState(\"\")\n    const [fileChecked, setFileChecked] = useState(false)\n    const [linkChecked, setLinkChecked] = useState(false)\n    const [loaded, setLoaded] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [product, setProduct] = useState(null)\n    const [quantity, setQuantity] = useState(null)\n    const [success, setSuccess] = useState(null)\n\n    function isNotEmpty(str)\n    {\n        return str.trim() !== \"\"\n    }\n\n    function onChangeDescription(event)\n    {\n        setDescription(event.target.value)\n    }\n\n    function onChangeName(event)\n    {\n        let val = event.target.value\n        setName(val)\n        event.target.style.borderBottomColor = isNotEmpty(val) ? \"green\" : \"red\"\n    }\n\n    function onChangePrice(event)\n    {\n        let val = event.target.value\n        let isValid = str => str.match(/^[0-9]+\\.?([0-9]{1,2})?$/)\n\n        if (isValid(val) || val === \"\")\n            setPrice(val)\n        \n        event.target.style.borderBottomColor = isValid(price) ? \"green\" : \"red\"\n    }\n\n    function onChangeQuantity(event)\n    {\n        let val = event.target.value\n        let isValid = str => str.match(/^[0-9]+$/)\n\n        if (isValid(val) || val === \"\") \n            setQuantity(val)\n        \n        event.target.style.borderBottomColor = isValid(quantity) ? \"green\" : \"red\"\n    }\n\n    function onChangeImageUrl(event)\n    {\n        let val = event.target.value\n        setImageUrl(val)\n        event.target.style.borderBottomColor = isNotEmpty(val) ? \"green\" : \"red\"\n    }\n\n    function onSelectRadioLink()\n    {\n        setLinkChecked(true)\n        setFileChecked(false)\n    }\n\n    function onSelectRadioFile()\n    {\n        setLinkChecked(false)\n        setFileChecked(true)\n    }\n\n    function onSubmit(event)\n    {\n        event.preventDefault()\n        \n        const URL = `http://localhost:3200/api/products/${id}`\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"PUT\", URL)\n        \n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let message = JSON.parse(XHR.responseText).message\n                setError(XHR.status === 201 ? null : message)\n                setSuccess(XHR.status === 201 ? `/product/${id}` : null)\n            }\n        }\n\n        XHR.setRequestHeader('Content-type', 'application/json')\n        XHR.setRequestHeader('Authorization', token)\n        XHR.send(JSON.stringify({\n            name: name,\n            price: Number.parseFloat(price),\n            description: description,\n            quantity: Number.parseInt(quantity),\n            imageUrl: imageUrl\n        }))\n    }\n\n    // Component did mount\n    if (!loaded)\n    {\n        const URL = `http://localhost:3200/api/products/${id}`\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"GET\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let response = JSON.parse(XHR.responseText)\n\n                if (XHR.status === 200)\n                {\n                    let { name, description, price, imageUrl, quantity } = response.product\n                    \n                    setProduct(response.product)\n                    setName(name)\n                    setDescription(description ? description : \"\")\n                    setPrice(`${price}`)\n                    setQuantity(`${quantity}`)\n                    setImageUrl(imageUrl)\n                }\n                \n                setLoaded(true)\n            }\n        }\n\n        XHR.send()\n    }\n\n    // Render\n    const loadingStyle = { display: \"flex\", justifyContent: \"center\" }\n    \n    if (!token)\n        return <E403/>\n\n    if (success)\n        return <Redirect to={ success }/>\n\n    if (!loaded)\n        return [\n            <h1 className=\"title\" key={0}>Encore un peu de patience...</h1>,\n            <div style={ loadingStyle } key={1}><Loading/></div>,\n        ]\n\n    if (!product)\n        return [\n            <h1 className=\"title\" key={0}>Produit inexistant</h1>,\n            <p className=\"error\" key={1}>Ce produit n'existe pas ou a été retiré.</p>,\n        ]\n\n    const submit = isNotEmpty(name) && isNotEmpty(price)\n        && isNotEmpty(quantity) && isNotEmpty(imageUrl)\n\n    return [\n        <Helmet key={0}>\n            <title>Modifier un produit - STUFF MANAGER</title>\n        </Helmet>,\n        <h1 className=\"title\" key={1}>Modifier le produit</h1>,\n        error && <p className=\"error\" key={2}>{ error }</p>,\n        <form action=\"\" method=\"POST\" onSubmit={ onSubmit } key={3}>\n            <div className=\"field\">\n                <label htmlFor=\"Nom\">Nom du produit</label>\n                <input\n                    className=\"textfield\"\n                    name=\"name\"\n                    onChange={ onChangeName }\n                    placeholder=\"Nom du produit\"\n                    type=\"text\"\n                    value={ name }\n                />\n            </div>\n            <div className=\"field\">\n                <label htmlFor=\"Prix\">Prix (€)</label>\n                <input\n                    className=\"textfield\"\n                    inputMode=\"numeric\"\n                    name=\"price\"\n                    onChange={ onChangePrice }\n                    placeholder=\"12.34\"\n                    type=\"text\"\n                    value={ price }\n                />\n            </div>\n            <div className=\"field\">\n                <label htmlFor=\"Description\">Description</label>\n                <textarea\n                    className=\"textfield textfield--area\"\n                    defaultValue={ description }\n                    name=\"description\"\n                    onChange={ onChangeDescription }\n                    placeholder=\"Ici, la description...\"\n                >\n                </textarea>\n            </div>\n            <div className=\"field\">\n                <label htmlFor=\"Quantité\">Quantité</label>\n                <input\n                    className=\"textfield\"\n                    inputMode=\"decimal\"\n                    name=\"quantity\"\n                    onChange={ onChangeQuantity }\n                    placeholder=\"123\"\n                    type=\"text\"\n                    value={ quantity }\n                />\n            </div>\n            <div className=\"field\">\n                <label htmlFor=\"Quantité\">Image</label>\n                <div className=\"field__radio\">\n                    <input\n                        checked={ linkChecked }\n                        type=\"radio\"\n                        name=\"imageUrlOption\"\n                        value=\"link\"\n                        onChange={ onSelectRadioLink }\n                    />\n                    <input\n                        className={ `textfield ${linkChecked || \"textfield--disabled\"}` }\n                        disabled={ !linkChecked }\n                        type=\"text\"\n                        onChange={ onChangeImageUrl }\n                        name=\"imageUrl\"\n                        placeholder=\"https://cdn.urldelimage.com/image.png\"\n                        value={ imageUrl }\n                    />\n                </div>\n                <div className=\"field__radio\">\n                    <input\n                        checked={ fileChecked }\n                        type=\"radio\"\n                        name=\"imageUrlOption\"\n                        value=\"file\"\n                        onChange={ onSelectRadioFile }\n                    />\n                    <input\n                        className={ `textfield ${fileChecked || \"textfield--disabled\"}` }\n                        disabled={ !fileChecked }\n                        type=\"file\"\n                        name=\"imageUrl\"\n                        placeholder=\"Chargez votre image ici...\"\n                    />\n                </div>\n            </div>\n            <div className=\"field\">\n                <input\n                    className={ `button ${submit || \"button--disabled\"}` }\n                    disabled={ !submit }\n                    type=\"submit\"\n                    value=\"Modifier le produit\"\n                />\n            </div>\n        </form>\n    ]\n}\n\nModifyProductForm.propTypes = {\n    token: PropTypes.string\n}\n\nexport default ModifyProductForm","import { useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { PropTypes } from 'prop-types'\nimport { Redirect, useParams } from 'react-router-dom'\n\nimport E403 from './E403'\nimport Loading from '../Templates/Loading'\n\nconst DeleteProductForm = ({ token }) =>\n{\n    const [error, setError] = useState(null)\n    const [id] = useState(useParams().id)\n    const [loaded, setLoaded] = useState(false)\n    const [product, setProduct] = useState(null)\n    const [redirect, setRedirect] = useState(null)\n    \n    function onConfirm(event)\n    {\n        event.preventDefault()\n\n        const URL = `http://localhost:3200/api/products/${id}`\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"DELETE\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let { message } = JSON.parse(XHR.responseText)\n\n                if (XHR.status === 200)\n                    setRedirect(\"/\")\n                    \n                setError(XHR.status === 200 ? null : message)\n                setLoaded(true)\n            }\n        }\n\n        XHR.setRequestHeader('Authorization', token)\n        XHR.send()\n    }\n\n    function onRetract(event)\n    {\n        event.preventDefault()\n        setRedirect(`/product/${id}`)\n    }\n\n    // Component did mount\n    if (!loaded)\n    {\n        const URL = `http://localhost:3200/api/products/${id}`\n        const XHR = new XMLHttpRequest()\n\n        XHR.open(\"GET\", URL)\n\n        XHR.onreadystatechange = () =>\n        {\n            if (XHR.readyState === 4)\n            {\n                let product = JSON.parse(XHR.responseText).product\n\n                if (XHR.status === 200)\n                    setProduct(product)\n                    \n                setLoaded(true)\n            }\n        }\n\n        XHR.send()\n    }\n\n    // Render\n    const loadingStyle = { display: \"flex\", justifyContent: \"center\" }\n    \n    if (!token)\n        return <E403/>\n\n    if (!loaded)\n        return [\n            <h1 className=\"title\" key={0}>Encore un peu de patience...</h1>,\n            <div style={ loadingStyle } key={1}><Loading/></div>,\n        ]\n\n    if (!product)\n        return [\n            <h1 className=\"title\" key={0}>Produit inexistant</h1>,\n            <p className=\"error\" key={1}>Ce produit n'existe pas ou a été retiré.</p>,\n        ]\n\n    if (redirect)\n        return <Redirect to={ redirect }/>\n    \n    return [\n        <Helmet key={0}>\n            <title>Supprimer un produit - STUFF MANAGER</title>\n        </Helmet>,\n        <h1 className=\"title\" key={1}>Supprimer { product.name } ?</h1>,\n        error && <p className=\"error\" key={2}>{ error }</p>,\n        <p key={3}>Voulez-vous vraiment supprimer ce produit ?</p>,\n        <div className=\"deleteForm\" key={4}>\n            <form action=\"\" className=\"field\" method=\"POST\" onSubmit={ onConfirm }>\n                <input className=\"link\" type=\"submit\" value=\"OUI\"/>\n            </form>\n            <form action=\"\" className=\"field\" method=\"POST\" onSubmit={ onRetract }>\n                <input className=\"link\" type=\"submit\" value=\"NON\"/>\n            </form>\n        </div>\n    ]\n}\n\nDeleteProductForm.propTypes = {\n    token: PropTypes.string\n}\n\nexport default DeleteProductForm","import { Component } from 'react'\nimport { Route, Redirect, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nimport './App.css'\n\nimport Navbar from './Templates/Navbar'\nimport Footer from './Templates/Footer'\n\nimport E404 from './Views/E404'\nimport ProductsList from './Views/ProductsList'\nimport Product from './Views/Product'\nimport LoginForm from './Views/LoginForm'\nimport RegisterForm from './Views/RegisterForm'\nimport AddProductForm from './Views/AddProductForm'\nimport ModifyProductForm from './Views/ModifyProductForm'\nimport DeleteProductForm from './Views/DeleteProductForm'\n\nconst sessionIsActive = () =>\n{\n    const userIdVerify = sessionStorage.getItem('userID')\n    const jwt = require('jsonwebtoken');\n\n    try\n    {\n        const token = sessionStorage.getItem('TOKEN').split(' ')[1]\n        const decodedToken = jwt.verify(token, \"RANDOM_SECRET_KEY\")\n        const { userId } = decodedToken\n        return userIdVerify && userIdVerify === userId\n    }\n    catch (error)\n    {\n        sessionStorage.clear()\n        return false\n    }\n}\n\nclass App extends Component\n{\n    state = {\n        connected: sessionIsActive(),\n        token: sessionStorage.getItem('TOKEN')\n    }\n\n    logout = () =>\n    {\n        sessionStorage.clear()\n        this.setState({ connected: false })\n    }\n\n    tryLogin = (newToken, userId) =>\n    {\n        sessionStorage.setItem('TOKEN', `Bearer ${newToken}`)\n        sessionStorage.setItem('userID', userId)\n        this.setState({ connected: true })\n    }\n    \n    render()\n    {\n        const { connected, token } = this.state\n\n        return (\n            <div className=\"App\">\n                <Helmet>\n                    <title>STUFF MANAGER</title>\n                </Helmet>          \n                <Router>\n                    <Navbar admin={ connected } logoutHandler={ this.logout }/>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <ProductsList/>\n                        </Route>\n                        <Route exact path=\"/addProduct\">\n                            <AddProductForm token={ token }/>\n                        </Route>\n                        <Route exact path=\"/login\">\n                            <LoginForm setTokenHandle={ this.tryLogin }/>\n                        </Route>\n                        <Route exact path=\"/logout\">\n                            <Redirect to=\"/\"/>\n                        </Route>\n                        <Route exact path=\"/register\">\n                            <RegisterForm/>\n                        </Route>\n                        <Route path=\"/product/:id/modify\">\n                            <ModifyProductForm token={ token }/>\n                        </Route>                        \n                        <Route path=\"/product/:id/delete\">\n                            <DeleteProductForm token={ token }/>\n                        </Route>\n                        <Route exact path=\"/product/:id\">\n                            <Product admin={ connected }/>\n                        </Route>\n                        <Route path=\"*\">\n                            <E404/>\n                        </Route>\n                    </Switch>\n                    <Footer/>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}